FILES INCLUDED

Program Files
* GrCompiler.exe - Graphite compiler 
* icuuc66.dll - ICU character definitions that are used to initialize certain glyph attributes based on the corresponding Unicode character properties.
* icudt66.dll - ICU data tables
* gdlpp.exe - C-like preprocessor to handle #define and #include statements
* stddef.gdh - standard GDL identifiers

For testing the installation ("example" folder)
* allcaps.gdl - simple GDL program
* stddr.ttf - simple Roman font to compile with allcaps.gdl
* allcaps_test.html - HTML file to test the compiled font

Documentation files ("doc" folder)
* GraphiteOverview.pdf
* GDL.pdf
* CompilerDebugFiles.pdf
* StackMachineCommands.pdf
* GTF_4_0.pdf
* GDL_BNF.pdf
* CppDoc.pdf - from the C preprocessor gdlpp.exe is derived from


INSTALLING THE PROGRAM

Please uninstall any prior versions (see below). After running the installer program, all the program files will be located in the indicated folder. The PATH environment variable will be modified to include the directory containing grcompiler.exe.

If you choose to put the gdlpp.exe file in a different folder from GrCompiler.exe, you need to set the GDLPP environment variable to indicate where this utility is, for instance: "c:\graphite_extras\gdlpp.exe". Note that the variable must include the name of the program as well as well as the path. Also, the actual env var must be set without using quote marks.

The GDLPP_PREFS environment variable is used to indicate where the Graphite compiler will find #included files. The value consists of "-I" followed by the path or paths to files of interest, for instance, "-Ic:\graphite" (without quotes marks in actual use). At the very least, you will want to be able to #include "stddef.gdh", which is the standard include file that contains all the standard GDL abbreviations. If it is located in a different folder than the GDL source code and font file, you will need to put its path in the GDLPP_PREFS environment variable. The installer will initialize GDLPP_PREFS to point to the directory containing this file, which will be in the same directory as grcompiler.exe.

NOTE: GDLPP_PREFS must not contain directory names with spaces. If there are spaces in your path, you will need to use 8-character directory names. So if, for instance, your "stddef.gdh" file is located in "C:\Program Files\Graphite Compiler", GDLPP_PREFS should likely be set to "-IC:\Progra~1\Graphi~1" (without quotes). If the compiler is having trouble finding the stddef.gdh file (ie, standard definitions are not recognized), check your GDLPP_PREFS environment variable and change it to use short names if necessary. (Alternatively, you can install the compiler into a folder with no spaces in its path or copy the "stddef.gdh" to the same folder as the GDL source code or specify the path to it in the #include directive.)


RUNNING THE COMPILER

To run the compiler, execute the grcompiler.exe file. Omitting all arguments will give a summary of the expected syntax, which is:

    grcompiler [options] gdl-file input-font-file [output-font-file] [output-font-name]

If the output-font-file argument is omitted, the name of the resulting Graphite-enabled font file will be the same as the input-font-file with "_gr" appended. For instance, if your input-font-file is "myfont.ttf", the output file will be "myfont_gr.ttf".

If the output-font-name is omitted, the resulting font will have the same name as the original font.

Options:

-c - generate a compressed version of the font

-d - causes the compiler to output the XML debugger file. This flag is recommended, and required for fonts to run in Graide.

-D - causes the compiler to output both the XML file and the text debugger files. The text files are documented in "Compiler Debug Files.doc".

-e - specify the error message file; gdlerr.txt by default

-g - permit and ignore invalid glyph definitions.

-q - runs in quiet mode, generating no messages unless there is an error.

-vN - allows you to specify the version of the font tables to be generated; e.g., "-v3". Version 2 will be generated by default.

-wNNNN - ignore warning with the given number.

-wall - show all warnings (warnings can be hidden by adding subsequent -wNNNN options).

Run 'grcomiler -h' for more options.


TESTING THE INSTALLATION

The file "allcaps.gdl" is a very simple program that you can try to compile which will render English lowercase letters as uppercase. It needs to be compiled with a font that contains the Roman alphabet--a, b, c, etc. The stddr.ttf is such a font and is included as part of the installation. The "allcaps_test.html" file will render lower case English letters in the compiled font. These files are located in the example folder.

- Run 'grcompiler allcaps.gdl stddr.ttf', which generates stddr_gr.ttf

- Open 'allcaps_test.html' in a browser that supports Graphite (like Firefox)


UNINSTALLING THE PROGRAM

To uninstall, run "unins000.exe". You may also want to remove the installation folder from the PATH.
