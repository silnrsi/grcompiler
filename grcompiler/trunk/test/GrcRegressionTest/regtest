#!/usr/bin/perl

use IO::File;
use Getopt::Std;

getopts('g:ho:p:r:');

if ($opt_h)
{
    die <<'EOT';
    regtest [-g grcompiler] [-o logfile] [-p gdlpp] [-r regtest] [dir]
Searches for fonts to run tests on in [dir] (defaults to .) and runs them
storing log info in logfile and exiting with the number of errors

  -g grcompiler     command to use to run grcompiler [grcompiler]
  -h                print this help and exit
  -o logfile        file to log to [regtest.log]
  -p gdlpp          command to run the gdlpp []
  -r regtest        command to test result font [GrcRegressionTest]
EOT
}

$opt_g ||= 'grcompiler';
$opt_o ||= 'regtest.log';
$ENV{'GDLPP'} = $opt_p if ($opt_p);
$opt_r ||= 'GrcRegressionTest';

my (@fonts) = sort glob(($ARGV[0] ? $ARGV[0] : '.') . "/*Input.ttf");
my ($outf) = IO::File->new("> $opt_o") || die "Can't create $opt_o";
my ($f, $errors);

foreach $f (@fonts)
{
    my ($t) = $f;
    my ($r) = $f;
    my ($n) = $f;
    $n =~ s/Input.ttf$//o;

    print "Testing Font: $n\n";
    next unless (-f "${n}Benchmark.ttf");
    next unless (-f "${n}Main.gdl");
    $r = "${n}Test.ttf";
    $t = "${n}Main.gdl";
#    $r =~ s{^.*[/\\](.*?)$}{$1}o;

    system($opt_g, "-q", $t, $f, $r);
    if (-f $r)      # assume it passes if it gives a result
    {
        $t =~ s/Main.gdl$/Benchmark.ttf/o;

        unlink 'grcregtest.log';
        my ($res) = system($opt_r, $r, $t);
        if ($res == -1)
        {
            print "Failed to run $opt_r because $!\n";
            $errors++;
        }
        my ($logf) = IO::File->new("grcregtest.log");
        if ($logf)
        {
        
            while (<$logf>)
            { $outf->print($_); }
            $logf->close;
        }
        if ($res > 0)
        {
            $res >>= 8;
            print "job error $res\n";
            $errors += $res;
        }
        unlink $r;
    }
    else
    {
        my ($logf) = IO::File->new("gdlerr.log");
        if ($logf)
        {
            while (<$logf>)
            { $outf->print($_); }
            $logf->close;
        }
        $errors++;
    }
}

$outf->close;

print "$errors errors encountered\n" if ($errors);
exit($errors);

